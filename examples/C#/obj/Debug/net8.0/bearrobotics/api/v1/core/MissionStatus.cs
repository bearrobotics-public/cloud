// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bearrobotics/api/v1/core/mission_status.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bearrobotics.Api.V1.Core {

  /// <summary>Holder for reflection information generated from bearrobotics/api/v1/core/mission_status.proto</summary>
  public static partial class MissionStatusReflection {

    #region Descriptor
    /// <summary>File descriptor for bearrobotics/api/v1/core/mission_status.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MissionStatusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1iZWFycm9ib3RpY3MvYXBpL3YxL2NvcmUvbWlzc2lvbl9zdGF0dXMucHJv",
            "dG8SGGJlYXJyb2JvdGljcy5hcGkudjEuY29yZRonYmVhcnJvYm90aWNzL2Fw",
            "aS92MS9jYXJ0aS9taXNzaW9uLnByb3RvGiliZWFycm9ib3RpY3MvYXBpL3Yx",
            "L2NvcmUvYW5ub3RhdGlvbi5wcm90bxonYmVhcnJvYm90aWNzL2FwaS92MS9z",
            "ZXJ2aS9taXNzaW9uLnByb3RvIoIBCgxCYXNlRmVlZGJhY2sSPQoGc3RhdHVz",
            "GAEgASgOMi0uYmVhcnJvYm90aWNzLmFwaS52MS5jb3JlLkJhc2VGZWVkYmFj",
            "ay5TdGF0dXMiMwoGU3RhdHVzEhIKDlNUQVRVU19VTktOT1dOEAASFQoRU1RB",
            "VFVTX05BVklHQVRJTkcQASLrBAoMTWlzc2lvblN0YXRlEhIKCm1pc3Npb25f",
            "aWQYASABKAkSOwoFc3RhdGUYAiABKA4yLC5iZWFycm9ib3RpY3MuYXBpLnYx",
            "LmNvcmUuTWlzc2lvblN0YXRlLlN0YXRlEi0KBWdvYWxzGAMgAygLMh4uYmVh",
            "cnJvYm90aWNzLmFwaS52MS5jb3JlLkdvYWwSGgoSY3VycmVudF9nb2FsX2lu",
            "ZGV4GAQgASgFElAKEG1pc3Npb25fZmVlZGJhY2sYBSABKAsyNi5iZWFycm9i",
            "b3RpY3MuYXBpLnYxLmNvcmUuTWlzc2lvblN0YXRlLk1pc3Npb25GZWVkYmFj",
            "axrcAQoPTWlzc2lvbkZlZWRiYWNrEj8KDWJhc2VfZmVlZGJhY2sYASABKAsy",
            "Ji5iZWFycm9ib3RpY3MuYXBpLnYxLmNvcmUuQmFzZUZlZWRiYWNrSAASPQoO",
            "c2VydmlfZmVlZGJhY2sYAiABKAsyIy5iZWFycm9ib3RpY3MuYXBpLnYxLnNl",
            "cnZpLkZlZWRiYWNrSAASPQoOY2FydGlfZmVlZGJhY2sYAyABKAsyIy5iZWFy",
            "cm9ib3RpY3MuYXBpLnYxLmNhcnRpLkZlZWRiYWNrSABCCgoIZmVlZGJhY2si",
            "jQEKBVN0YXRlEhEKDVNUQVRFX1VOS05PV04QABIRCg1TVEFURV9ERUZBVUxU",
            "EAESEQoNU1RBVEVfUlVOTklORxACEhAKDFNUQVRFX1BBVVNFRBADEhIKDlNU",
            "QVRFX0NBTkNFTEVEEAQSEwoPU1RBVEVfU1VDQ0VFREVEEAUSEAoMU1RBVEVf",
            "RkFJTEVEEAZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bearrobotics.Api.V1.Carti.MissionReflection.Descriptor, global::Bearrobotics.Api.V1.Core.AnnotationReflection.Descriptor, global::Bearrobotics.Api.V1.Servi.MissionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bearrobotics.Api.V1.Core.BaseFeedback), global::Bearrobotics.Api.V1.Core.BaseFeedback.Parser, new[]{ "Status" }, null, new[]{ typeof(global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bearrobotics.Api.V1.Core.MissionState), global::Bearrobotics.Api.V1.Core.MissionState.Parser, new[]{ "MissionId", "State", "Goals", "CurrentGoalIndex", "MissionFeedback" }, null, new[]{ typeof(global::Bearrobotics.Api.V1.Core.MissionState.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Bearrobotics.Api.V1.Core.MissionState.Types.MissionFeedback), global::Bearrobotics.Api.V1.Core.MissionState.Types.MissionFeedback.Parser, new[]{ "BaseFeedback", "ServiFeedback", "CartiFeedback" }, new[]{ "Feedback" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// BaseFeedback provides status updates on mission progress,
  /// specific to base missions.
  /// </summary>
  public sealed partial class BaseFeedback : pb::IMessage<BaseFeedback>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BaseFeedback> _parser = new pb::MessageParser<BaseFeedback>(() => new BaseFeedback());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BaseFeedback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bearrobotics.Api.V1.Core.MissionStatusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseFeedback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseFeedback(BaseFeedback other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseFeedback Clone() {
      return new BaseFeedback(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status status_ = global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BaseFeedback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BaseFeedback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status.Unknown) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BaseFeedback other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status.Unknown) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = (global::Bearrobotics.Api.V1.Core.BaseFeedback.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BaseFeedback message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Current feedback status of the robot.
      /// </summary>
      public enum Status {
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The robot is currently navigating to its target.
        /// </summary>
        [pbr::OriginalName("STATUS_NAVIGATING")] Navigating = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// MissionState represents the current state of a mission assigned to a robot.
  /// </summary>
  public sealed partial class MissionState : pb::IMessage<MissionState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MissionState> _parser = new pb::MessageParser<MissionState>(() => new MissionState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MissionState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bearrobotics.Api.V1.Core.MissionStatusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MissionState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MissionState(MissionState other) : this() {
      missionId_ = other.missionId_;
      state_ = other.state_;
      goals_ = other.goals_.Clone();
      currentGoalIndex_ = other.currentGoalIndex_;
      missionFeedback_ = other.missionFeedback_ != null ? other.missionFeedback_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MissionState Clone() {
      return new MissionState(this);
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 1;
    private string missionId_ = "";
    /// <summary>
    /// Unique identifier for the mission.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MissionId {
      get { return missionId_; }
      set {
        missionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Bearrobotics.Api.V1.Core.MissionState.Types.State state_ = global::Bearrobotics.Api.V1.Core.MissionState.Types.State.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bearrobotics.Api.V1.Core.MissionState.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "goals" field.</summary>
    public const int GoalsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bearrobotics.Api.V1.Core.Goal> _repeated_goals_codec
        = pb::FieldCodec.ForMessage(26, global::Bearrobotics.Api.V1.Core.Goal.Parser);
    private readonly pbc::RepeatedField<global::Bearrobotics.Api.V1.Core.Goal> goals_ = new pbc::RepeatedField<global::Bearrobotics.Api.V1.Core.Goal>();
    /// <summary>
    /// All goals associated with the mission, in the order the request was given.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Bearrobotics.Api.V1.Core.Goal> Goals {
      get { return goals_; }
    }

    /// <summary>Field number for the "current_goal_index" field.</summary>
    public const int CurrentGoalIndexFieldNumber = 4;
    private int currentGoalIndex_;
    /// <summary>
    /// Index of the currently active goal in the goals list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentGoalIndex {
      get { return currentGoalIndex_; }
      set {
        currentGoalIndex_ = value;
      }
    }

    /// <summary>Field number for the "mission_feedback" field.</summary>
    public const int MissionFeedbackFieldNumber = 5;
    private global::Bearrobotics.Api.V1.Core.MissionState.Types.MissionFeedback missionFeedback_;
    /// <summary>
    /// Latest feedback for the mission.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bearrobotics.Api.V1.Core.MissionState.Types.MissionFeedback MissionFeedback {
      get { return missionFeedback_; }
      set {
        missionFeedback_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MissionState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MissionState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MissionId != other.MissionId) return false;
      if (State != other.State) return false;
      if(!goals_.Equals(other.goals_)) return false;
      if (CurrentGoalIndex != other.CurrentGoalIndex) return false;
      if (!object.Equals(MissionFeedback, other.MissionFeedback)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MissionId.Length != 0) hash ^= MissionId.GetHashCode();
      if (State != global::Bearrobotics.Api.V1.Core.MissionState.Types.State.Unknown) hash ^= State.GetHashCode();
      hash ^= goals_.GetHashCode();
      if (CurrentGoalIndex != 0) hash ^= CurrentGoalIndex.GetHashCode();
      if (missionFeedback_ != null) hash ^= MissionFeedback.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MissionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MissionId);
      }
      if (State != global::Bearrobotics.Api.V1.Core.MissionState.Types.State.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      goals_.WriteTo(output, _repeated_goals_codec);
      if (CurrentGoalIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrentGoalIndex);
      }
      if (missionFeedback_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MissionFeedback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MissionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MissionId);
      }
      if (State != global::Bearrobotics.Api.V1.Core.MissionState.Types.State.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      goals_.WriteTo(ref output, _repeated_goals_codec);
      if (CurrentGoalIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrentGoalIndex);
      }
      if (missionFeedback_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MissionFeedback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MissionId);
      }
      if (State != global::Bearrobotics.Api.V1.Core.MissionState.Types.State.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += goals_.CalculateSize(_repeated_goals_codec);
      if (CurrentGoalIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentGoalIndex);
      }
      if (missionFeedback_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MissionFeedback);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MissionState other) {
      if (other == null) {
        return;
      }
      if (other.MissionId.Length != 0) {
        MissionId = other.MissionId;
      }
      if (other.State != global::Bearrobotics.Api.V1.Core.MissionState.Types.State.Unknown) {
        State = other.State;
      }
      goals_.Add(other.goals_);
      if (other.CurrentGoalIndex != 0) {
        CurrentGoalIndex = other.CurrentGoalIndex;
      }
      if (other.missionFeedback_ != null) {
        if (missionFeedback_ == null) {
          MissionFeedback = new global::Bearrobotics.Api.V1.Core.MissionState.Types.MissionFeedback();
        }
        MissionFeedback.MergeFrom(other.MissionFeedback);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MissionId = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Bearrobotics.Api.V1.Core.MissionState.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            goals_.AddEntriesFrom(input, _repeated_goals_codec);
            break;
          }
          case 32: {
            CurrentGoalIndex = input.ReadInt32();
            break;
          }
          case 42: {
            if (missionFeedback_ == null) {
              MissionFeedback = new global::Bearrobotics.Api.V1.Core.MissionState.Types.MissionFeedback();
            }
            input.ReadMessage(MissionFeedback);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MissionId = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Bearrobotics.Api.V1.Core.MissionState.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            goals_.AddEntriesFrom(ref input, _repeated_goals_codec);
            break;
          }
          case 32: {
            CurrentGoalIndex = input.ReadInt32();
            break;
          }
          case 42: {
            if (missionFeedback_ == null) {
              MissionFeedback = new global::Bearrobotics.Api.V1.Core.MissionState.Types.MissionFeedback();
            }
            input.ReadMessage(MissionFeedback);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MissionState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// State indicates the current lifecycle state of the mission.
      /// </summary>
      public enum State {
        [pbr::OriginalName("STATE_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Initial state when no mission has been run (e.g., feedback is empty).
        /// </summary>
        [pbr::OriginalName("STATE_DEFAULT")] Default = 1,
        /// <summary>
        /// The mission is actively running.
        /// </summary>
        [pbr::OriginalName("STATE_RUNNING")] Running = 2,
        /// <summary>
        /// The mission is paused.
        /// </summary>
        [pbr::OriginalName("STATE_PAUSED")] Paused = 3,
        /// <summary>
        /// The mission was canceled before completion.
        /// </summary>
        [pbr::OriginalName("STATE_CANCELED")] Canceled = 4,
        /// <summary>
        /// The mission completed successfully.
        /// </summary>
        [pbr::OriginalName("STATE_SUCCEEDED")] Succeeded = 5,
        /// <summary>
        /// The mission encountered an error or failure.
        /// </summary>
        [pbr::OriginalName("STATE_FAILED")] Failed = 6,
      }

      /// <summary>
      /// Feedback provides mission-specific runtime information.
      /// </summary>
      public sealed partial class MissionFeedback : pb::IMessage<MissionFeedback>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MissionFeedback> _parser = new pb::MessageParser<MissionFeedback>(() => new MissionFeedback());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MissionFeedback> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Bearrobotics.Api.V1.Core.MissionState.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MissionFeedback() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MissionFeedback(MissionFeedback other) : this() {
          switch (other.FeedbackCase) {
            case FeedbackOneofCase.BaseFeedback:
              BaseFeedback = other.BaseFeedback.Clone();
              break;
            case FeedbackOneofCase.ServiFeedback:
              ServiFeedback = other.ServiFeedback.Clone();
              break;
            case FeedbackOneofCase.CartiFeedback:
              CartiFeedback = other.CartiFeedback.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MissionFeedback Clone() {
          return new MissionFeedback(this);
        }

        /// <summary>Field number for the "base_feedback" field.</summary>
        public const int BaseFeedbackFieldNumber = 1;
        /// <summary>
        /// Generic feedback applicable to base mission types. e,g., NavigateMission.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Bearrobotics.Api.V1.Core.BaseFeedback BaseFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.BaseFeedback ? (global::Bearrobotics.Api.V1.Core.BaseFeedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.BaseFeedback;
          }
        }

        /// <summary>Field number for the "servi_feedback" field.</summary>
        public const int ServiFeedbackFieldNumber = 2;
        /// <summary>
        /// Feedback specific to Servi missions.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Bearrobotics.Api.V1.Servi.Feedback ServiFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.ServiFeedback ? (global::Bearrobotics.Api.V1.Servi.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.ServiFeedback;
          }
        }

        /// <summary>Field number for the "carti_feedback" field.</summary>
        public const int CartiFeedbackFieldNumber = 3;
        /// <summary>
        /// Feedback specific to Carti missions.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Bearrobotics.Api.V1.Carti.Feedback CartiFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.CartiFeedback ? (global::Bearrobotics.Api.V1.Carti.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.CartiFeedback;
          }
        }

        private object feedback_;
        /// <summary>Enum of possible cases for the "feedback" oneof.</summary>
        public enum FeedbackOneofCase {
          None = 0,
          BaseFeedback = 1,
          ServiFeedback = 2,
          CartiFeedback = 3,
        }
        private FeedbackOneofCase feedbackCase_ = FeedbackOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FeedbackOneofCase FeedbackCase {
          get { return feedbackCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearFeedback() {
          feedbackCase_ = FeedbackOneofCase.None;
          feedback_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MissionFeedback);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MissionFeedback other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(BaseFeedback, other.BaseFeedback)) return false;
          if (!object.Equals(ServiFeedback, other.ServiFeedback)) return false;
          if (!object.Equals(CartiFeedback, other.CartiFeedback)) return false;
          if (FeedbackCase != other.FeedbackCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (feedbackCase_ == FeedbackOneofCase.BaseFeedback) hash ^= BaseFeedback.GetHashCode();
          if (feedbackCase_ == FeedbackOneofCase.ServiFeedback) hash ^= ServiFeedback.GetHashCode();
          if (feedbackCase_ == FeedbackOneofCase.CartiFeedback) hash ^= CartiFeedback.GetHashCode();
          hash ^= (int) feedbackCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (feedbackCase_ == FeedbackOneofCase.BaseFeedback) {
            output.WriteRawTag(10);
            output.WriteMessage(BaseFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.ServiFeedback) {
            output.WriteRawTag(18);
            output.WriteMessage(ServiFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.CartiFeedback) {
            output.WriteRawTag(26);
            output.WriteMessage(CartiFeedback);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (feedbackCase_ == FeedbackOneofCase.BaseFeedback) {
            output.WriteRawTag(10);
            output.WriteMessage(BaseFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.ServiFeedback) {
            output.WriteRawTag(18);
            output.WriteMessage(ServiFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.CartiFeedback) {
            output.WriteRawTag(26);
            output.WriteMessage(CartiFeedback);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (feedbackCase_ == FeedbackOneofCase.BaseFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.ServiFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServiFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.CartiFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CartiFeedback);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MissionFeedback other) {
          if (other == null) {
            return;
          }
          switch (other.FeedbackCase) {
            case FeedbackOneofCase.BaseFeedback:
              if (BaseFeedback == null) {
                BaseFeedback = new global::Bearrobotics.Api.V1.Core.BaseFeedback();
              }
              BaseFeedback.MergeFrom(other.BaseFeedback);
              break;
            case FeedbackOneofCase.ServiFeedback:
              if (ServiFeedback == null) {
                ServiFeedback = new global::Bearrobotics.Api.V1.Servi.Feedback();
              }
              ServiFeedback.MergeFrom(other.ServiFeedback);
              break;
            case FeedbackOneofCase.CartiFeedback:
              if (CartiFeedback == null) {
                CartiFeedback = new global::Bearrobotics.Api.V1.Carti.Feedback();
              }
              CartiFeedback.MergeFrom(other.CartiFeedback);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Bearrobotics.Api.V1.Core.BaseFeedback subBuilder = new global::Bearrobotics.Api.V1.Core.BaseFeedback();
                if (feedbackCase_ == FeedbackOneofCase.BaseFeedback) {
                  subBuilder.MergeFrom(BaseFeedback);
                }
                input.ReadMessage(subBuilder);
                BaseFeedback = subBuilder;
                break;
              }
              case 18: {
                global::Bearrobotics.Api.V1.Servi.Feedback subBuilder = new global::Bearrobotics.Api.V1.Servi.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.ServiFeedback) {
                  subBuilder.MergeFrom(ServiFeedback);
                }
                input.ReadMessage(subBuilder);
                ServiFeedback = subBuilder;
                break;
              }
              case 26: {
                global::Bearrobotics.Api.V1.Carti.Feedback subBuilder = new global::Bearrobotics.Api.V1.Carti.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.CartiFeedback) {
                  subBuilder.MergeFrom(CartiFeedback);
                }
                input.ReadMessage(subBuilder);
                CartiFeedback = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Bearrobotics.Api.V1.Core.BaseFeedback subBuilder = new global::Bearrobotics.Api.V1.Core.BaseFeedback();
                if (feedbackCase_ == FeedbackOneofCase.BaseFeedback) {
                  subBuilder.MergeFrom(BaseFeedback);
                }
                input.ReadMessage(subBuilder);
                BaseFeedback = subBuilder;
                break;
              }
              case 18: {
                global::Bearrobotics.Api.V1.Servi.Feedback subBuilder = new global::Bearrobotics.Api.V1.Servi.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.ServiFeedback) {
                  subBuilder.MergeFrom(ServiFeedback);
                }
                input.ReadMessage(subBuilder);
                ServiFeedback = subBuilder;
                break;
              }
              case 26: {
                global::Bearrobotics.Api.V1.Carti.Feedback subBuilder = new global::Bearrobotics.Api.V1.Carti.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.CartiFeedback) {
                  subBuilder.MergeFrom(CartiFeedback);
                }
                input.ReadMessage(subBuilder);
                CartiFeedback = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code

plugins {
    id 'java'
    id 'application'
    id 'com.google.protobuf' version '0.9.4'
}

group 'com.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 17

repositories {
    mavenCentral()
}

def grpcVersion = '1.59.0'
def protobufVersion = '3.24.0'

dependencies {
    // gRPC dependencies
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-auth:${grpcVersion}"

    // JWT token and authentication
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // HTTP client for API auth
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'

    // JSON parsing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    // For generated code
    compileOnly "jakarta.annotation:jakarta.annotation-api:2.1.1"

    // This is needed for javax.annotation.Generated used by gRPC
    compileOnly "javax.annotation:javax.annotation-api:1.3.2"

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

sourceSets {
    main {
        proto {
            srcDir 'proto/cloud'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }

    // Configure the proto source directories
    generatedFilesBaseDir = "$projectDir/src/generated"
}

// Clean up generated sources
clean {
    delete protobuf.generatedFilesBaseDir
}

application {
    mainClass = 'com.example.Main'
}

